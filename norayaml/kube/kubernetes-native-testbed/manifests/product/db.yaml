---
apiVersion: v1
kind: Secret
metadata:
  name: product-db
  namespace: product
  labels:
    service: product
    role: db
type: Opaque
stringData:
  ROOT_PASSWORD: product
  DATABASE: product
  USER: product
  PASSWORD: product
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-s3-credentials
  namespace: product
  labels:
    service: product
    role: db
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_SECRET_ACCESS_KEY: miniosecret
  S3_ENDPOINT: http://minio-hl-svc.infra.svc.cluster.local:9000
---
apiVersion: mysql.presslabs.org/v1alpha1
kind: MysqlCluster
metadata:
  name: product-db
  namespace: product
  annotations:
    argocd.argoproj.io/hook: Skip
  labels:
    service: product
    role: db
spec:
  replicas: 2
  secretName: product-db
  mysqlVersion: "5.7"
  # initBucketURL: gs://bucket_name/backup.xtrabackup.gz
  # initBucketSecretName:

  minAvailable: "10%"

  ## For recurrent backups set backupSchedule with a cronjob expression
  backupSchedule: "0 0 */2 * *"
  backupURL: s3://product-db/
  backupSecretName: minio-s3-credentials
  backupScheduleJobsHistoryLimit: 3
  backupRemoteDeletePolicy: delete

  # mysqlConf:
  #   innodb-buffer-size: "128M"

  podSpec:
    persistentVolumeClaim:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-ceph-block
      resources:
        requests:
          storage: 4Gi

  ## Specify service objectives
  ## If thoses SLO are not fulfilled by cluster node then that node is
  ## removed from scheme
  # targetSLO:
  #   maxSlaveLatency: 10s
---
