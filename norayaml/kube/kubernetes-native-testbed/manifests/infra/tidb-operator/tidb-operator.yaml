# Generated by below command
#   helm2 repo add pingcap https://charts.pingcap.org/
#   helm2 repo update
#   helm2 fetch --version v1.0.6 pingcap/tidb-operator
#   helm2 template tidb-operator-v1.0.6.tgz > tidb-operator.yaml
#   # add namespace infra to each metadata
#   echo --- >> tidb-operator.yaml
#   curl -o - https://raw.githubusercontent.com/pingcap/tidb-operator/v1.0.6/manifests/crd.yaml >> tidb-operator.yaml
---
# Source: tidb-operator/templates/scheduler-policy-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tidb-scheduler-policy
  namespace: infra
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
data:
  policy.cfg: |-
    {
      "kind" : "Policy",
      "apiVersion" : "v1",
      "predicates": [
        {"name": "NoVolumeZoneConflict"},
        {"name": "MaxEBSVolumeCount"},
        {"name": "MaxAzureDiskVolumeCount"},
        {"name": "NoDiskConflict"},
        {"name": "GeneralPredicates"},
        {"name": "PodToleratesNodeTaints"},
        {"name": "CheckVolumeBinding"},
        {"name": "MaxGCEPDVolumeCount"},
        {"name": "MatchInterPodAffinity"},
        {"name": "CheckVolumeBinding"}
      ],
      "priorities": [
        {"name": "SelectorSpreadPriority", "weight": 1},
        {"name": "InterPodAffinityPriority", "weight": 1},
        {"name": "LeastRequestedPriority", "weight": 1},
        {"name": "BalancedResourceAllocation", "weight": 1},
        {"name": "NodePreferAvoidPodsPriority", "weight": 1},
        {"name": "NodeAffinityPriority", "weight": 1},
        {"name": "TaintTolerationPriority", "weight": 1}
      ],
      "extenders": [
        {
          "urlPrefix": "http://127.0.0.1:10262/scheduler",
          "filterVerb": "filter",
          "weight": 1,
          "httpTimeout": 30000000000,
          "enableHttps": false
        }
      ]
    }
    

---
# Source: tidb-operator/templates/controller-manager-rbac.yaml

kind: ServiceAccount
apiVersion: v1
metadata:
  name: tidb-controller-manager
  namespace: infra
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: tidb-operator-v1.0.6
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:tidb-controller-manager
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: tidb-operator-v1.0.6
rules:
- apiGroups: [""]
  resources:
    - services
    - events
  verbs: ["*"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["create", "get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch","update", "delete"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["*"]
- apiGroups: ["pingcap.com"]
  resources: ["tidbclusters", "tidbclusters/finalizers"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "patch","update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:tidb-controller-manager
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: tidb-operator-v1.0.6
subjects:
- kind: ServiceAccount
  name: tidb-controller-manager
  namespace: infra
roleRef:
  kind: ClusterRole
  name: release-name:tidb-controller-manager
  apiGroup: rbac.authorization.k8s.io

---
# Source: tidb-operator/templates/scheduler-rbac.yaml

kind: ServiceAccount
apiVersion: v1
metadata:
  name: tidb-scheduler
  namespace: infra
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:tidb-scheduler
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
rules:
# ConfigMap permission for --policy-configmap
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]
- apiGroups: ["pingcap.com"]
  resources: ["tidbclusters"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "update"]
# Extra permissions for endpoints other than kube-scheduler
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["delete", "get", "patch", "update"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  resourceNames: ["tidb-scheduler"]
  verbs: ["get", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:tidb-scheduler
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
subjects:
- kind: ServiceAccount
  name: tidb-scheduler
  namespace: infra
roleRef:
  kind: ClusterRole
  name: release-name:tidb-scheduler
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:kube-scheduler
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
subjects:
- kind: ServiceAccount
  name: tidb-scheduler
  namespace: infra
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name:volume-scheduler
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
subjects:
- kind: ServiceAccount
  name: tidb-scheduler
  namespace: infra
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io

---
# Source: tidb-operator/templates/controller-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tidb-controller-manager
  namespace: infra
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: tidb-operator-v1.0.6
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tidb-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tidb-operator
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller-manager
    spec:
      serviceAccount: tidb-controller-manager
      containers:
      - name: tidb-operator
        image: pingcap/tidb-operator:v1.0.6
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 250m
              memory: 150Mi
            requests:
              cpu: 80m
              memory: 50Mi
            
        command:
          - /usr/local/bin/tidb-controller-manager
          - -default-storage-class-name=local-storage
          - -cluster-scoped=true
          - -auto-failover=true
          - -pd-failover-period=5m
          - -tikv-failover-period=5m
          - -tidb-failover-period=5m
          - -v=2
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TZ
            value: UTC

---
# Source: tidb-operator/templates/scheduler-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tidb-scheduler
  namespace: infra
  labels:
    app.kubernetes.io/name: tidb-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: scheduler
    helm.sh/chart: tidb-operator-v1.0.6
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tidb-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tidb-operator
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: scheduler
    spec:
      serviceAccount: tidb-scheduler
      containers:
      - name: tidb-scheduler
        image: pingcap/tidb-operator:v1.0.6
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 250m
              memory: 150Mi
            requests:
              cpu: 80m
              memory: 50Mi
            
        command:
          - /usr/local/bin/tidb-scheduler
          - -v=2
          - -port=10262
      - name: kube-scheduler
        image: k8s.gcr.io/kube-scheduler:v1.14.0
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 250m
              memory: 150Mi
            requests:
              cpu: 80m
              memory: 50Mi
            
        command:
        - kube-scheduler
        - --port=10261
        - --leader-elect=true
        - --lock-object-name=tidb-scheduler
        - --lock-object-namespace=infra
        - --scheduler-name=tidb-scheduler
        - --v=2
        - --policy-configmap=tidb-scheduler-policy
        - --policy-configmap-namespace=infra

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: tidbclusters.pingcap.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: pingcap.com
  # list of versions supported by this CustomResourceDefinition
  version: v1alpha1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: tidbclusters
    # singular name to be used as an alias on the CLI and for display
    singular: tidbcluster
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: TidbCluster
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - tc
  additionalPrinterColumns:
  - name: PD
    type: string
    description: The image for PD cluster
    JSONPath: .spec.pd.image
  - name: Storage
    type: string
    description: The storage size specified for PD node
    JSONPath: .spec.pd.requests.storage
  - name: Ready
    type: integer
    description: The ready replicas number of PD cluster
    JSONPath: .status.pd.statefulSet.readyReplicas
  - name: Desire
    type: integer
    description: The desired replicas number of PD cluster
    JSONPath: .spec.pd.replicas
  - name: TiKV
    type: string
    description: The image for TiKV cluster
    JSONPath: .spec.tikv.image
  - name: Storage
    type: string
    description: The storage size specified for TiKV node
    JSONPath: .spec.tikv.requests.storage
  - name: Ready
    type: integer
    description: The ready replicas number of TiKV cluster
    JSONPath: .status.tikv.statefulSet.readyReplicas
  - name: Desire
    type: integer
    description: The desired replicas number of TiKV cluster
    JSONPath: .spec.tikv.replicas
  - name: TiDB
    type: string
    description: The image for TiDB cluster
    JSONPath: .spec.tidb.image
  - name: Ready
    type: integer
    description: The ready replicas number of TiDB cluster
    JSONPath: .status.tidb.statefulSet.readyReplicas
  - name: Desire
    type: integer
    description: The desired replicas number of TiDB cluster
    JSONPath: .spec.tidb.replicas
  validation:
   # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          properties:
            pd:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                requests:
                  properties:
                    cpu:
                      type: string
            tikv:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                requests:
                  properties:
                    cpu:
                      type: string
            tidb:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                requests:
                  properties:
                    cpu:
                      type: string
