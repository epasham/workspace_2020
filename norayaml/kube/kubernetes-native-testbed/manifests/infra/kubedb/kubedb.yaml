# Generated by below command
#   helm2 repo add appscode https://charts.appscode.com/stable/
#   helm2 repo update
#   helm2 fetch --version v0.13.0-rc.0 appscode/kubedb
#   helm2 template --name kubedb-operator --namespace infra kubedb-v0.13.0-rc.0.tgz > kubedb.yaml
---
# Source: kubedb/templates/operator-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kubedb-operator
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
spec:
  privileged: true  #Allowing privileged pods is necessary for ES db
  allowPrivilegeEscalation: true #Allowing privilege escalation is necessary for ES db
  volumes:
  - "*"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE

---
# Source: kubedb/templates/service-account.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedb-operator
  namespace: infra
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"


---
# Source: kubedb/templates/appcatalog-user-roles.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]


---
# Source: kubedb/templates/cluster-role.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb-operator
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - services
  verbs: ["create", "delete", "get", "patch", "list"]
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "update", "list", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - kubedb-operator
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - postgres-db
  - redis-db
  - elasticsearch-snapshot
  - mongodb-snapshot
  - mysql-snapshot
  - postgres-snapshot
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  verbs: ["get", "list", "watch"]


---
# Source: kubedb/templates/user-roles.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - elasticsearches
  - memcacheds
  - mongodbs
  - mysqls
  - postgreses
  - redises
  - snapshots
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources:
  - dormantdatabases
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - elasticsearchversions
  - memcachedversions
  - mongodbversions
  - mysqlversions
  - postgresversions
  - redisversions
  verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - dormantdatabases
  - elasticsearches
  - memcacheds
  - mongodbs
  - mysqls
  - postgreses
  - redises
  - snapshots
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - elasticsearchversions
  - memcachedversions
  - mongodbversions
  - mysqlversions
  - postgresversions
  - redisversions
  verbs: ["get", "list", "watch"]


---
# Source: kubedb/templates/cluster-role-binding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb-operator
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: infra


---
# Source: kubedb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubedb-operator
  namespace: infra
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
spec:
  ports:
  - name: api
    port: 443
    targetPort: https
  selector:
    app: "kubedb"
    release: "kubedb-operator"

---
# Source: kubedb/templates/deployment.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb-operator
  namespace: infra
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "kubedb"
      release: "kubedb-operator"
  template:
    metadata:
      labels:
        chart: "kubedb-v0.13.0-rc.0"
        app: "kubedb"
        release: "kubedb-operator"
        heritage: "Tiller"
    spec:
      serviceAccountName: kubedb-operator
      containers:
      - name: operator
        image: kubedb/operator:v0.13.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --governing-service=kubedb
        - --rbac=true
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --enable-status-subresource=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: https
          containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 15
        resources:
          requests:
            cpu: 100m
            memory: 60Mi
          
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-operator-apiserver-cert
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
        
---
# Source: kubedb/templates/apiregistration.yaml

apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: infra
    name: kubedb-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRUnlQOTBwVlhWcnMzRkY0VU9tUzA2ekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBeU1URXdOek13TURWYUZ3MHpNREF5TURnd056TXdNRFZhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3ZDhuCm5sdDc5MGdXN21HYTJxOTJReUdWd0tEYXlJMDE0a21iTCtXSFljZ2Fldys2Vm9xaHRCdll6MWF6USs1NUk0SVoKVy9hbjRvUEcvbjVEOXk1MlZzRExSWGRvRE9iK0RlQWZsbFZERFF6VHBkVUtnbW1oeHBnbGJoOWdGblVqV0hqago5UTduZ29ubUo3M3ZxbGErMnljc3IxMEtvRkFRRGZCbXNIQUpqNFRDY0Rab2phQWYyd3UwV1dqald0cFplcUI0CnVSUUFnTXMrVWljZzNlM2lYYTh4Uk0zM3RoVXVISU9nT050eUk5ckpWdEFNWGUxa2pkaEgzRXdNZTJwaktUNWUKZnRCU1l3ZzFuNnZPclB6cThYUkdpQ3RYZTBORG1DY1dwazBqdnlzSVVtbjJKNW1OZ0xLTmRndzRWZkxxT1JRcgpiTWZBd1NJc2QveXc0UEdCSHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUt0aUIvdDZqZFpsSXdyLzh4clZJWHBQbUI0WHNvdG5TZXlVNlVtck9sU1FjVUlySTE2UApyVTMyTUh1VU4xVVdvaVZHQ2tzUy9sWjlzQU5Pa09IN3hmNmxKK0dPbVU5RnhOYU94ZzE3M3RJMTI5WlVvTTB2Ck9TS3BJQVVLVitOWUhUOTZlOHpNZ0d0aE9vTG1LblV0eEZiUHN5YlpzT0N6WjRxVlg1TWl6VFhHSzZYbWxMOUoKSTRPYjdRNDVBeng0R1kxVWJNYTI2SUhBU2VnaFBZZWVsSzltNzI4MmZKVHh1aGFQakVaTThWa0prQjZoeDlQZgpuODkvWEhTVGtHbktIM3Y1bnFoc1NUbkdVT0NNZ0lkNjdLMUVadC9xZ2NvRWwxc1ZSWU9idWtzaWJjN3FEYldiCnFlN05HU3RiSEs0RVM0VDg3UUhjY2RVUzlMM1dMaXY1N0NZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: infra
    name: kubedb-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRUnlQOTBwVlhWcnMzRkY0VU9tUzA2ekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBeU1URXdOek13TURWYUZ3MHpNREF5TURnd056TXdNRFZhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3ZDhuCm5sdDc5MGdXN21HYTJxOTJReUdWd0tEYXlJMDE0a21iTCtXSFljZ2Fldys2Vm9xaHRCdll6MWF6USs1NUk0SVoKVy9hbjRvUEcvbjVEOXk1MlZzRExSWGRvRE9iK0RlQWZsbFZERFF6VHBkVUtnbW1oeHBnbGJoOWdGblVqV0hqago5UTduZ29ubUo3M3ZxbGErMnljc3IxMEtvRkFRRGZCbXNIQUpqNFRDY0Rab2phQWYyd3UwV1dqald0cFplcUI0CnVSUUFnTXMrVWljZzNlM2lYYTh4Uk0zM3RoVXVISU9nT050eUk5ckpWdEFNWGUxa2pkaEgzRXdNZTJwaktUNWUKZnRCU1l3ZzFuNnZPclB6cThYUkdpQ3RYZTBORG1DY1dwazBqdnlzSVVtbjJKNW1OZ0xLTmRndzRWZkxxT1JRcgpiTWZBd1NJc2QveXc0UEdCSHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUt0aUIvdDZqZFpsSXdyLzh4clZJWHBQbUI0WHNvdG5TZXlVNlVtck9sU1FjVUlySTE2UApyVTMyTUh1VU4xVVdvaVZHQ2tzUy9sWjlzQU5Pa09IN3hmNmxKK0dPbVU5RnhOYU94ZzE3M3RJMTI5WlVvTTB2Ck9TS3BJQVVLVitOWUhUOTZlOHpNZ0d0aE9vTG1LblV0eEZiUHN5YlpzT0N6WjRxVlg1TWl6VFhHSzZYbWxMOUoKSTRPYjdRNDVBeng0R1kxVWJNYTI2SUhBU2VnaFBZZWVsSzltNzI4MmZKVHh1aGFQakVaTThWa0prQjZoeDlQZgpuODkvWEhTVGtHbktIM3Y1bnFoc1NUbkdVT0NNZ0lkNjdLMUVadC9xZ2NvRWwxc1ZSWU9idWtzaWJjN3FEYldiCnFlN05HU3RiSEs0RVM0VDg3UUhjY2RVUzlMM1dMaXY1N0NZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
apiVersion: v1
kind: Secret
metadata:
  name: kubedb-operator-apiserver-cert
  namespace: infra
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMakNDQWhhZ0F3SUJBZ0lSQUp6TmRNTTMzeUhuWERSNVZDQ2xBRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBd01qRXhNRGN6TURBMVdoY05NekF3TWpBNE1EY3pNREExV2pBYQpNUmd3RmdZRFZRUURFdzlyZFdKbFpHSXRiM0JsY21GMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFEbE16bktVVHNEbzhuMlBqcGlFTHZGY1o0NXQ0bmQ4REQxOTNwRmVyemx6QVQ2em4KdWdNV0EwakVEaldmbzNjYUZBZm5XTTVSUzZZcTE3L2I3NkE2dDhTeWR1cXJ3QnZGQ2E4aTlFN0lFVGdRR1BnVQoySlBjM2xjS1B0WmpGdTJGMVJXdmRNSm1KbnNrWWlTMkZUOHhhcEJQNDdlR0VWWkpOS0pCWERjZE92TzlkMVVOCkhIVFg2dmhMSStYTFpHZ3JhSnRrSzVORy9PZ1lCS1c5RklnMzVPL1JibktmbnZ5b1dSL1RuZ2VDM0RhSHVpTCsKTFprVEJXTE1wNVFzUXM2bUdtRCtGaHNGeTc0SzVpVnN2czl6Ylk1RVZaZnFTaVRCeXFxS0VKdldhV0dLci9YLwovejZFRmcveVJ5ZkdFdFpLNzRUTTQ1WlZXMlZvMlVCRlhrUVBBZ01CQUFHamZEQjZNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBN0JnTlZIUkVFTkRBeWdoVnJkV0psWkdJdGIzQmxjbUYwYjNJdWFXNW1jbUdDR1d0MVltVmtZaTF2Y0dWeQpZWFJ2Y2k1cGJtWnlZUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDZWhJbFA1bGtpZUNZMytuK0dJCnFnT3NKQi9lT01ybG5rdERRTjB5dy9UaDh1dDFSajFvdlhaa3FHeVJPTmlRYmlEL2sxTmRlOHcwdzk0VXhHU3UKUVl0MHhETWFzOTY1QTN1KzIvamxTb2JkeWZ5WGVYaUx6VFhMcENnaUI4cSt1d2hVVTFQRjRWTWJOckNNSUozUApCMXhHZ1o4N2F1YTNlS0ttR1UxYjVNYy9IR0RZUUhsYWVQRHhYMjhjRTJTelRqK3l0VVNUT0JKdTVleDFnUmFWCmdjSnRKV3VFMWpYeWM3Z0ZoY0pyVHROelVVOHhqWUdnTFlUL1NWQmRxdTFjNk9vRURhV05tb0dyajBJdjk1dkMKVFdSMTFKU2wzM0ZGWUFrTFFDU1NZR1dBaVhyRVVyM0NFNVo1UUZHUFBwL1Z4Y1VaaHpHWlp6NVJnS3Zpa1BHQgppcnc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0E1VE01eWxFN0E2UEo5ajQ2WWhDN3hYR2VPYmVKM2ZBdzlmZDZSWHE4NWN3RStzCjU3b0RGZ05JeEE0MW42TjNHaFFINTFqT1VVdW1LdGUvMisrZ09yZkVzbmJxcThBYnhRbXZJdlJPeUJFNEVCajQKRk5pVDNONVhDajdXWXhidGhkVVZyM1RDWmlaN0pHSWt0aFUvTVdxUVQrTzNoaEZXU1RTaVFWdzNIVHJ6dlhkVgpEUngwMStyNFN5UGx5MlJvSzJpYlpDdVRSdnpvR0FTbHZSU0lOK1R2MFc1eW41NzhxRmtmMDU0SGd0dzJoN29pCi9pMlpFd1ZpektlVUxFTE9waHBnL2hZYkJjdStDdVlsYkw3UGMyMk9SRldYNmtva3djcXFpaENiMW1saGlxLzEKLy84K2hCWVA4a2NueGhMV1N1K0V6T09XVlZ0bGFObEFSVjVFRHdJREFRQUJBb0lCQUIyaFdDYkxVUkNUakxpVApvcmFaaDltbXFnMTlkeHdKeDBGU210ajdpdWNmeEdHTEtWTHErTlRwbHMxZ245ZE1RZkROREZjZDlWN0hmQkI2CkRzaWcxS2lhZDRkTkgzRjJCeExFSnJnTzF5UzR1MXlJYmFYUnNDWlFTejl5YUdNTFE0UDFWdzRseG1RNkpaOTgKWU11U3haZ2JKNzZibEZIajFOc2dlclA0eFN3R0N1N2xPWTBmTW9OTnl1WjNwTDVycXJhNFBHaThicW1xeXlpbQpselBzWFFsVUlrb0d3S29VbGxIS0c0OU9LYUMwOXVSai81S1RSWkE2WFRqUmxtMXRRczYrZkcxUnBFaUVGcnU1ClJFTHMvbXEyU2lVYmpmWVJySFN6c0NwZEMzNXV4ci9FQWJ4UVM3RkkzOWhESUtmd3lxdnRuNEFQTWZFRGJlNFkKTkZkSGhva0NnWUVBMzNYY09sTmlaNTNaUmhPVHA5ZEkzK2NoU213VXdLWFVsd24rU3Q0TUlEN2VLQjJ6bG9SYgp1elFqTm53Qm51NUw0RXZYNG5oSG82VUdtTjNqQ0FGUGREOElLY3NpYUlZblhiRlN4cm8rQmJlelBBVW5obWJMCmM2aCszd0kvME5lekxuUmF0aUorazZPVlRtREJ6ZmtlNFFLdDNOVkVLZDF1TTNlRXJWbzRYZ3NDZ1lFQTNBWEYKeCtYOW5LVmpjaWRMZnVVaU5vMTZHbFRjb1RSVE5ocXFVd0pqbXlaeHd5cDVpM0hMNnRRSU03R05DcVo1Z21HVwpKT2t0aUNwcnVaSnZNT3I2TytTbFVIOWpYU3R5ZDJVWWhjOXBMcHlLMDVkZm5hbmpQdE1vcmxZaWJNVmgrKzNICk9RVmhFYnV6UFNXV1BaZnk5SWVmVTA4SUVTTkFKRFRnd1FNYWFJMENnWUFlN1FMVGw2S3cwR20zaHhJU1Vuc2wKY2FscjBWVjE2LzFtQWQ0Tm9ubHZKUVE5N1E1anNHRzVvTmVXdk1iRXBob2VLcUR3R05GaFZuOTVQSXdsR1hsVApqejJqK3hjQi9EOEtlbllJUnRJNm5GZlQ0S3E5c1JCTEszQ1RrSTRnYXhuRFBoc254ZEphd0hMemEvU21ldW5KCkhrUE5vajVTeFBCeGN3TUxzc2JHVFFLQmdRQ2NTdFYxN0dBOVdCYk9UaStJMG9kOUxQNmhtY3FvRUoxVGY1bWkKSWI1VHhmbGw0OVEzUS96UXNSR3FkdU56djFIdFZoanIyMS9tckF1ZDVQRnJWRit4RC9pR3VCY0RaZ3VIMko2VQozd01lZzBEeWtVTHdvbSswZnhjVTBFYmY4VTVyUVRzVnZFWjU3RldraUFDemZDNnZtVytLSkVmY3RLZXBrSTVmClRTOERPUUtCZ0VxcGViNFRtUTROajFyR2tZNzRxUWtoblc4YXZET0p4RmRDTVVqNUsrU0J1bkFXTTVYOUlWN1AKSHlTVTRsTWhoNWovMXRYOWtuRG4zMGVVeEFwcUNKZ3ZyejFrLzlTdkgwcmJPdkJnekpMeUREK2luYlJMMjRxUgpBaGpWdlhhNDdsK1FIYWlkTmJadjNETHJyU3VuK0ZwTGZ3VEQrOU1Ea3RYZDdnMThOamhkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---


# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubedb-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: infra
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator-apiserver-auth-delegator
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: infra

---
# Source: kubedb/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearchmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgresmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqlmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redismutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/memcachedmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/etcdmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None


---
# Source: kubedb/templates/servicemonitor.yaml


---
# Source: kubedb/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    chart: "kubedb-v0.13.0-rc.0"
    app: "kubedb"
    release: "kubedb-operator"
    heritage: "Tiller"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearchvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgresvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqlvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redisvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/memcachedvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/etcdvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: snapshot.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/snapshotvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["snapshots"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: dormantdatabase.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/dormantdatabasevalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["dormantdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: namespace.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  failurePolicy: Fail
  sideEffects: None


