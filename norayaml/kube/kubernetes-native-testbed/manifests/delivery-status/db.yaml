---
apiVersion: v1
kind: ConfigMap
metadata:
  name: delivery-status-db-settings
  namespace: delivery-status
data:
  pre_run.sh: |-
    echo "  ** this is pre_run.sh script executed before run.sh **"
    #Examples:
    echo "Change default Authenticator & Authorizer"
    sed -ri 's/(authenticator:).*/\1 PasswordAuthenticator/' /etc/cassandra/cassandra.yaml
    sed -ri 's/(authorizer:).*/\1 CassandraAuthorizer/' /etc/cassandra/cassandra.yaml
    #test "$(hostname)" == 'cassandra-demo-dc1-rack2-0' && echo "update param" && sed -i 's/windows_timer_interval: 1/windows_timer_interval: 2/' /etc/cassandra/cassandra.yaml
    #test "$(hostname)" == 'cassandra-demo-dc1-rack3-0' && echo "-Dcassandra.replace_address_first_boot=172.31.183.209" > /etc/cassandra/jvm.options
    #test "$(hostname)" == 'cassandra-demo-dc2-rack1-0' && echo "-Dcassandra.override_decommission=true" > /etc/cassandra/jvm.options    
    echo "  ** end of pre_run.sh script, continue with run.sh **"
  post_run.sh: |-
    echo "Check Configured seeds by bootstrap"
    grep "seeds:" /etc/cassandra/cassandra.yaml
---  
apiVersion: db.orange.com/v1alpha1
kind: CassandraCluster
metadata:
  name: delivery-status-db
  namespace: delivery-status
  annotations:
    argocd.argoproj.io/hook: Skip
  labels:
    cluster: k8s.kaas
spec:
  cassandraImage: cassandra:3.11
  bootstrapImage: orangeopensource/cassandra-bootstrap:0.1.4
  configMapName: delivery-status-db-settings
  dataCapacity: "10Gi"
  dataStorageClass: "rook-ceph-block"
  imagepullpolicy: IfNotPresent  
  hardAntiAffinity: false
  deletePVC: true
  autoPilot: false
  gcStdout: true
  autoUpdateSeedList: true
  maxPodUnavailable: 1
  runAsUser: 999
  resources:         
    requests:
      cpu: '1'
      memory: 2Gi
    limits:
      cpu: '1'
      memory: 2Gi
  topology:
    dc:
      - name: dc1
        nodesPerRacks: 1
        numTokens: 256
        rack:
          - name: rack1
          - name: rack2
      - name: dc2
        nodesPerRacks: 1
        numTokens: 256
        rack:
          - name: rack1
          - name: rack2
---
apiVersion: v1
kind: Secret
metadata:
  name: delivery-status-db
  namespace: delivery-status
  labels:
    service: delivery-status
    role: db
stringData:
  username: deliverystatus
  password: deliverystatus
  keyspace: deliverystatus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-script
  namespace: delivery-status
  labels:
    service: delivery-status
    role: check
data:
  init.sh: |-
    #!/bin/bash
    echo "initialize database running..."
    cqlsh -u ${DB_SUPERUSER_USERNAME} -p ${DB_SUPERUSER_PASSWORD} ${DB_HOST} ${DB_PORT} -e "ALTER KEYSPACE system_auth WITH REPLICATION = {'class' : 'NetworkTopologyStrategy', 'dc1' : 1, 'dc2' : 1};"
    cqlsh -u ${DB_SUPERUSER_USERNAME} -p ${DB_SUPERUSER_PASSWORD} ${DB_HOST} ${DB_PORT} -e "CREATE ROLE ${DB_USERNAME} WITH LOGIN = true AND PASSWORD = '${DB_PASSWORD}';"
    cqlsh -u ${DB_SUPERUSER_USERNAME} -p ${DB_SUPERUSER_PASSWORD} ${DB_HOST} ${DB_PORT} -e "CREATE KEYSPACE ${DB_KEYSPACE} WITH REPLICATION = {'class' : 'NetworkTopologyStrategy', 'dc1' : 1, 'dc2' : 1};"
    cqlsh -u ${DB_SUPERUSER_USERNAME} -p ${DB_SUPERUSER_PASSWORD} ${DB_HOST} ${DB_PORT} -e "GRANT ALL ON KEYSPACE ${DB_KEYSPACE} TO ${DB_USERNAME};"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-db
  namespace: delivery-status
  labels:
    service: delivery-status
    role: db
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 10000
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: check-container
        image: cassandra:3.11
        command:
        - /scripts/init.sh
        env:
          - name: DB_HOST
            value: delivery-status-db.delivery-status.svc.cluster.local
          - name: DB_PORT
            value: "9042"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: delivery-status-db
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: delivery-status-db
                key: password
          - name: DB_KEYSPACE
            valueFrom:
              secretKeyRef:
                name: delivery-status-db
                key: keyspace
          - name: DB_SUPERUSER_USERNAME
            value: cassandra
          - name: DB_SUPERUSER_PASSWORD
            value: cassandra
        volumeMounts:
        - name: scripts-volume
          mountPath: /scripts
      volumes:
        - name: scripts-volume
          configMap:
            name: init-db-script
            defaultMode: 493 # mode 755
