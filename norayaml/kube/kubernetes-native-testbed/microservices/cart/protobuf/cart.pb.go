// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cart.proto

package cartpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cart struct {
	UserUUID             string           `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
	CartProducts         map[string]int32 `protobuf:"bytes,2,rep,name=cartProducts,proto3" json:"cartProducts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Cart) Reset()         { *m = Cart{} }
func (m *Cart) String() string { return proto.CompactTextString(m) }
func (*Cart) ProtoMessage()    {}
func (*Cart) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{0}
}

func (m *Cart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cart.Unmarshal(m, b)
}
func (m *Cart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cart.Marshal(b, m, deterministic)
}
func (m *Cart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cart.Merge(m, src)
}
func (m *Cart) XXX_Size() int {
	return xxx_messageInfo_Cart.Size(m)
}
func (m *Cart) XXX_DiscardUnknown() {
	xxx_messageInfo_Cart.DiscardUnknown(m)
}

var xxx_messageInfo_Cart proto.InternalMessageInfo

func (m *Cart) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

func (m *Cart) GetCartProducts() map[string]int32 {
	if m != nil {
		return m.CartProducts
	}
	return nil
}

type ShowRequest struct {
	UserUUID             string   `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowRequest) Reset()         { *m = ShowRequest{} }
func (m *ShowRequest) String() string { return proto.CompactTextString(m) }
func (*ShowRequest) ProtoMessage()    {}
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{1}
}

func (m *ShowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowRequest.Unmarshal(m, b)
}
func (m *ShowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowRequest.Marshal(b, m, deterministic)
}
func (m *ShowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowRequest.Merge(m, src)
}
func (m *ShowRequest) XXX_Size() int {
	return xxx_messageInfo_ShowRequest.Size(m)
}
func (m *ShowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowRequest proto.InternalMessageInfo

func (m *ShowRequest) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

type ShowResponse struct {
	Cart                 *Cart    `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowResponse) Reset()         { *m = ShowResponse{} }
func (m *ShowResponse) String() string { return proto.CompactTextString(m) }
func (*ShowResponse) ProtoMessage()    {}
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{2}
}

func (m *ShowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowResponse.Unmarshal(m, b)
}
func (m *ShowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowResponse.Marshal(b, m, deterministic)
}
func (m *ShowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowResponse.Merge(m, src)
}
func (m *ShowResponse) XXX_Size() int {
	return xxx_messageInfo_ShowResponse.Size(m)
}
func (m *ShowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowResponse proto.InternalMessageInfo

func (m *ShowResponse) GetCart() *Cart {
	if m != nil {
		return m.Cart
	}
	return nil
}

type AddRequest struct {
	Cart                 *Cart    `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{3}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetCart() *Cart {
	if m != nil {
		return m.Cart
	}
	return nil
}

type RemoveRequest struct {
	Cart                 *Cart    `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{4}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetCart() *Cart {
	if m != nil {
		return m.Cart
	}
	return nil
}

type CommitRequest struct {
	Cart                 *Cart    `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart,omitempty"`
	AddressUUID          string   `protobuf:"bytes,2,opt,name=addressUUID,proto3" json:"addressUUID,omitempty"`
	PaymentInfoUUID      string   `protobuf:"bytes,3,opt,name=paymentInfoUUID,proto3" json:"paymentInfoUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{5}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetCart() *Cart {
	if m != nil {
		return m.Cart
	}
	return nil
}

func (m *CommitRequest) GetAddressUUID() string {
	if m != nil {
		return m.AddressUUID
	}
	return ""
}

func (m *CommitRequest) GetPaymentInfoUUID() string {
	if m != nil {
		return m.PaymentInfoUUID
	}
	return ""
}

type CommitResponse struct {
	OrderUUID            string   `protobuf:"bytes,1,opt,name=orderUUID,proto3" json:"orderUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{6}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetOrderUUID() string {
	if m != nil {
		return m.OrderUUID
	}
	return ""
}

func init() {
	proto.RegisterType((*Cart)(nil), "cartpb.Cart")
	proto.RegisterMapType((map[string]int32)(nil), "cartpb.Cart.CartProductsEntry")
	proto.RegisterType((*ShowRequest)(nil), "cartpb.ShowRequest")
	proto.RegisterType((*ShowResponse)(nil), "cartpb.ShowResponse")
	proto.RegisterType((*AddRequest)(nil), "cartpb.AddRequest")
	proto.RegisterType((*RemoveRequest)(nil), "cartpb.RemoveRequest")
	proto.RegisterType((*CommitRequest)(nil), "cartpb.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "cartpb.CommitResponse")
}

func init() { proto.RegisterFile("cart.proto", fileDescriptor_bf731a5c8f9a516f) }

var fileDescriptor_bf731a5c8f9a516f = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x8f, 0xda, 0x30,
	0x10, 0x25, 0x09, 0xd0, 0x32, 0x81, 0x7e, 0xb8, 0x14, 0xa1, 0xb4, 0xaa, 0xa2, 0x9c, 0xd2, 0x8b,
	0x69, 0xe1, 0xd2, 0xf6, 0x52, 0x51, 0xca, 0x81, 0x1b, 0x4a, 0xc5, 0x0f, 0x08, 0xd8, 0xd0, 0xd5,
	0x92, 0x38, 0xeb, 0x38, 0xac, 0x72, 0xd8, 0xdf, 0xb3, 0xbf, 0x6d, 0xff, 0xc5, 0xca, 0x36, 0x5e,
	0x08, 0x2b, 0xb1, 0x5c, 0x22, 0xfb, 0xf9, 0xbd, 0x99, 0x37, 0x2f, 0x03, 0xb0, 0x8a, 0xb9, 0xc0,
	0x19, 0x67, 0x82, 0xa1, 0xa6, 0x3c, 0x67, 0x4b, 0xef, 0xd3, 0x86, 0xb1, 0xcd, 0x96, 0x0e, 0x14,
	0xba, 0x2c, 0xd6, 0x03, 0x9a, 0x64, 0xa2, 0xd4, 0xa4, 0xe0, 0xde, 0x82, 0xfa, 0x24, 0xe6, 0x02,
	0x79, 0xf0, 0xba, 0xc8, 0x29, 0x5f, 0x2c, 0x66, 0x7f, 0xfb, 0x96, 0x6f, 0x85, 0xad, 0xe8, 0xe9,
	0x8e, 0xfe, 0x40, 0x5b, 0xd6, 0x9a, 0x73, 0x46, 0x8a, 0x95, 0xc8, 0xfb, 0xb6, 0xef, 0x84, 0xee,
	0xf0, 0x0b, 0xd6, 0x0d, 0xb0, 0xd4, 0xab, 0x8f, 0x21, 0x4c, 0x53, 0xc1, 0xcb, 0xa8, 0xa2, 0xf1,
	0x7e, 0xc3, 0xfb, 0x67, 0x14, 0xf4, 0x0e, 0x9c, 0x6b, 0x5a, 0xee, 0xfb, 0xc9, 0x23, 0xea, 0x42,
	0x63, 0x17, 0x6f, 0x0b, 0xda, 0xb7, 0x7d, 0x2b, 0x6c, 0x44, 0xfa, 0xf2, 0xcb, 0xfe, 0x61, 0x05,
	0x5f, 0xc1, 0xfd, 0xf7, 0x9f, 0xdd, 0x46, 0xf4, 0xa6, 0xa0, 0xf9, 0x59, 0xbf, 0xc1, 0x37, 0x68,
	0x6b, 0x6a, 0x9e, 0xb1, 0x34, 0xa7, 0xc8, 0x87, 0xba, 0xf4, 0xa2, 0x78, 0xee, 0xb0, 0x7d, 0xec,
	0x3b, 0x52, 0x2f, 0x01, 0x06, 0x18, 0x13, 0x62, 0x6a, 0xbf, 0xcc, 0xff, 0x0e, 0x9d, 0x88, 0x26,
	0x6c, 0x47, 0x2f, 0x97, 0xdc, 0x41, 0x67, 0xc2, 0x92, 0xe4, 0x4a, 0x5c, 0x2c, 0x41, 0x3e, 0xb8,
	0x31, 0x21, 0x9c, 0xe6, 0xb9, 0x1a, 0xd3, 0x56, 0x63, 0x1e, 0x43, 0x28, 0x84, 0xb7, 0x59, 0x5c,
	0x26, 0x34, 0x15, 0xb3, 0x74, 0xcd, 0x14, 0xcb, 0x51, 0xac, 0x53, 0x38, 0xc0, 0xf0, 0xc6, 0xb4,
	0xdf, 0xa7, 0xf2, 0x19, 0x5a, 0x8c, 0x93, 0x4a, 0x84, 0x07, 0x60, 0xf8, 0x60, 0xc1, 0x2b, 0x69,
	0x65, 0x3c, 0x9f, 0xa1, 0x11, 0xd4, 0x65, 0x9e, 0xe8, 0x83, 0xf1, 0x78, 0xf4, 0x23, 0xbc, 0x6e,
	0x15, 0xd4, 0xc5, 0x83, 0x1a, 0x1a, 0x81, 0x33, 0x26, 0x04, 0x21, 0xf3, 0x7c, 0xc8, 0xd7, 0xeb,
	0x61, 0xbd, 0x92, 0xd8, 0xac, 0x24, 0x9e, 0xca, 0x95, 0x0c, 0x6a, 0xe8, 0x27, 0x34, 0x75, 0xae,
	0xe8, 0xa3, 0xd1, 0x55, 0x72, 0x3e, 0x2f, 0xd5, 0x03, 0x1e, 0xa4, 0x95, 0xbc, 0xbd, 0xde, 0x29,
	0x6c, 0xac, 0x2e, 0x9b, 0xaa, 0xd8, 0xe8, 0x31, 0x00, 0x00, 0xff, 0xff, 0xce, 0x24, 0x4f, 0x5f,
	0x3e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CartAPIClient is the client API for CartAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CartAPIClient interface {
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
}

type cartAPIClient struct {
	cc *grpc.ClientConn
}

func NewCartAPIClient(cc *grpc.ClientConn) CartAPIClient {
	return &cartAPIClient{cc}
}

func (c *cartAPIClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error) {
	out := new(ShowResponse)
	err := c.cc.Invoke(ctx, "/cartpb.CartAPI/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartAPIClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/cartpb.CartAPI/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartAPIClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/cartpb.CartAPI/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartAPIClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/cartpb.CartAPI/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CartAPIServer is the server API for CartAPI service.
type CartAPIServer interface {
	Show(context.Context, *ShowRequest) (*ShowResponse, error)
	Add(context.Context, *AddRequest) (*empty.Empty, error)
	Remove(context.Context, *RemoveRequest) (*empty.Empty, error)
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
}

// UnimplementedCartAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCartAPIServer struct {
}

func (*UnimplementedCartAPIServer) Show(ctx context.Context, req *ShowRequest) (*ShowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (*UnimplementedCartAPIServer) Add(ctx context.Context, req *AddRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedCartAPIServer) Remove(ctx context.Context, req *RemoveRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedCartAPIServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}

func RegisterCartAPIServer(s *grpc.Server, srv CartAPIServer) {
	s.RegisterService(&_CartAPI_serviceDesc, srv)
}

func _CartAPI_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartAPIServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cartpb.CartAPI/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartAPIServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartAPI_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartAPIServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cartpb.CartAPI/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartAPIServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartAPI_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartAPIServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cartpb.CartAPI/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartAPIServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartAPI_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartAPIServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cartpb.CartAPI/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartAPIServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CartAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cartpb.CartAPI",
	HandlerType: (*CartAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Show",
			Handler:    _CartAPI_Show_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _CartAPI_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _CartAPI_Remove_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _CartAPI_Commit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cart.proto",
}
