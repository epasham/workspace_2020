// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

package productpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	UUID                 string               `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price                uint64               `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	ImageURLs            []string             `protobuf:"bytes,4,rep,name=imageURLs,proto3" json:"imageURLs,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetImageURLs() []string {
	if m != nil {
		return m.ImageURLs
	}
	return nil
}

func (m *Product) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Product) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Product) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type GetRequest struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type GetResponse struct {
	Product              *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{2}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type SetRequest struct {
	Product              *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{3}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type SetResponse struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetResponse) Reset()         { *m = SetResponse{} }
func (m *SetResponse) String() string { return proto.CompactTextString(m) }
func (*SetResponse) ProtoMessage()    {}
func (*SetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{4}
}

func (m *SetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResponse.Unmarshal(m, b)
}
func (m *SetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResponse.Marshal(b, m, deterministic)
}
func (m *SetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResponse.Merge(m, src)
}
func (m *SetResponse) XXX_Size() int {
	return xxx_messageInfo_SetResponse.Size(m)
}
func (m *SetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetResponse proto.InternalMessageInfo

func (m *SetResponse) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type UpdateRequest struct {
	Product              *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{5}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type DeleteRequest struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{6}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type IsExistsRequest struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsExistsRequest) Reset()         { *m = IsExistsRequest{} }
func (m *IsExistsRequest) String() string { return proto.CompactTextString(m) }
func (*IsExistsRequest) ProtoMessage()    {}
func (*IsExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{7}
}

func (m *IsExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsExistsRequest.Unmarshal(m, b)
}
func (m *IsExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsExistsRequest.Marshal(b, m, deterministic)
}
func (m *IsExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsExistsRequest.Merge(m, src)
}
func (m *IsExistsRequest) XXX_Size() int {
	return xxx_messageInfo_IsExistsRequest.Size(m)
}
func (m *IsExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsExistsRequest proto.InternalMessageInfo

func (m *IsExistsRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type IsExistsResponse struct {
	IsExists             bool     `protobuf:"varint,1,opt,name=isExists,proto3" json:"isExists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsExistsResponse) Reset()         { *m = IsExistsResponse{} }
func (m *IsExistsResponse) String() string { return proto.CompactTextString(m) }
func (*IsExistsResponse) ProtoMessage()    {}
func (*IsExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{8}
}

func (m *IsExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsExistsResponse.Unmarshal(m, b)
}
func (m *IsExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsExistsResponse.Marshal(b, m, deterministic)
}
func (m *IsExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsExistsResponse.Merge(m, src)
}
func (m *IsExistsResponse) XXX_Size() int {
	return xxx_messageInfo_IsExistsResponse.Size(m)
}
func (m *IsExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsExistsResponse proto.InternalMessageInfo

func (m *IsExistsResponse) GetIsExists() bool {
	if m != nil {
		return m.IsExists
	}
	return false
}

func init() {
	proto.RegisterType((*Product)(nil), "productpb.Product")
	proto.RegisterType((*GetRequest)(nil), "productpb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "productpb.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "productpb.SetRequest")
	proto.RegisterType((*SetResponse)(nil), "productpb.SetResponse")
	proto.RegisterType((*UpdateRequest)(nil), "productpb.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "productpb.DeleteRequest")
	proto.RegisterType((*IsExistsRequest)(nil), "productpb.IsExistsRequest")
	proto.RegisterType((*IsExistsResponse)(nil), "productpb.IsExistsResponse")
}

func init() { proto.RegisterFile("product.proto", fileDescriptor_f0fd8b59378f44a5) }

var fileDescriptor_f0fd8b59378f44a5 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xdd, 0xea, 0xd3, 0x30,
	0x18, 0xc6, 0xed, 0xb6, 0xff, 0xb6, 0xbe, 0x65, 0x28, 0x41, 0x47, 0xc9, 0x04, 0x6b, 0x45, 0xe8,
	0x81, 0x74, 0x30, 0x41, 0xc4, 0x8f, 0x83, 0xc1, 0xc6, 0x18, 0x78, 0x30, 0x52, 0x7b, 0x01, 0xdd,
	0x1a, 0x47, 0x61, 0x5d, 0x63, 0x93, 0x82, 0x5e, 0x87, 0x17, 0xe4, 0xad, 0x49, 0x93, 0x7e, 0x5b,
	0x36, 0xf4, 0x2c, 0x79, 0xf3, 0xfc, 0xf2, 0x3e, 0x79, 0xde, 0x16, 0x66, 0x2c, 0x4d, 0xc2, 0xec,
	0x24, 0x5c, 0x96, 0x26, 0x22, 0x41, 0x7a, 0xb1, 0x65, 0x47, 0xbc, 0x38, 0x27, 0xc9, 0xf9, 0x42,
	0x97, 0xf2, 0xe0, 0x98, 0x7d, 0x5b, 0xd2, 0x98, 0x89, 0x9f, 0x4a, 0x87, 0x5f, 0x74, 0x0f, 0x45,
	0x14, 0x53, 0x2e, 0x82, 0x98, 0x29, 0x81, 0xfd, 0x6b, 0x00, 0x93, 0x83, 0xba, 0x0b, 0x21, 0x18,
	0xf9, 0xfe, 0x7e, 0x63, 0x6a, 0x96, 0xe6, 0xe8, 0x44, 0xae, 0xf3, 0xda, 0x35, 0x88, 0xa9, 0x39,
	0x50, 0xb5, 0x7c, 0x8d, 0x9e, 0xc2, 0x03, 0x4b, 0xa3, 0x13, 0x35, 0x87, 0x96, 0xe6, 0x8c, 0x88,
	0xda, 0xa0, 0xe7, 0xa0, 0x47, 0x71, 0x70, 0xa6, 0x3e, 0xf9, 0xc2, 0xcd, 0x91, 0x35, 0x74, 0x74,
	0x52, 0x17, 0xd0, 0x7b, 0xd0, 0x4f, 0x29, 0x0d, 0x04, 0x0d, 0xd7, 0xc2, 0x7c, 0xb0, 0x34, 0xc7,
	0x58, 0x61, 0x57, 0x99, 0x73, 0x4b, 0x73, 0xee, 0xd7, 0xd2, 0x1c, 0xa9, 0xc5, 0x39, 0x99, 0xb1,
	0xb0, 0x20, 0xc7, 0xf7, 0xc9, 0x4a, 0x9c, 0x93, 0x21, 0xbd, 0x50, 0x45, 0x4e, 0xee, 0x93, 0x95,
	0xd8, 0xb6, 0x00, 0x76, 0x54, 0x10, 0xfa, 0x3d, 0xa3, 0xbc, 0x37, 0x17, 0xfb, 0x23, 0x18, 0x52,
	0xc1, 0x59, 0x72, 0xe5, 0x14, 0xbd, 0x81, 0x49, 0x31, 0x11, 0xa9, 0x32, 0x56, 0xc8, 0xad, 0x26,
	0xe4, 0x16, 0xf9, 0x92, 0x52, 0x62, 0x7f, 0x00, 0xf0, 0xea, 0xeb, 0xff, 0x8d, 0x7d, 0x09, 0x86,
	0xd7, 0x68, 0xdc, 0xe7, 0xed, 0x33, 0xcc, 0x7c, 0x19, 0xc2, 0xff, 0x75, 0x78, 0x05, 0xb3, 0x8d,
	0x4c, 0xe2, 0xd6, 0xfb, 0x5f, 0xc3, 0xe3, 0x3d, 0xdf, 0xfe, 0x88, 0xb8, 0xe0, 0xb7, 0x64, 0x2e,
	0x3c, 0xa9, 0x65, 0x85, 0x65, 0x0c, 0xd3, 0xa8, 0xa8, 0x49, 0xed, 0x94, 0x54, 0xfb, 0xd5, 0xef,
	0x01, 0x40, 0x61, 0x68, 0x7d, 0xd8, 0xa3, 0x77, 0x30, 0xdc, 0x51, 0x81, 0x9e, 0x35, 0xec, 0xd6,
	0x73, 0xc1, 0xf3, 0x6e, 0x59, 0x35, 0xb0, 0x1f, 0xe5, 0x9c, 0xd7, 0xe1, 0xbc, 0x7e, 0xce, 0x6b,
	0x71, 0x9f, 0x60, 0xac, 0x92, 0x43, 0x66, 0x43, 0xd3, 0x0a, 0x13, 0xcf, 0xff, 0xfa, 0x84, 0xb6,
	0xf9, 0x0f, 0xa7, 0x68, 0x15, 0x5c, 0x8b, 0x6e, 0x65, 0x79, 0x83, 0xde, 0xc2, 0xb4, 0x8c, 0x0a,
	0xe1, 0x06, 0xdf, 0x89, 0x19, 0x2f, 0x7a, 0xcf, 0xca, 0x27, 0x1c, 0xc7, 0xf2, 0xe2, 0xb7, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x50, 0x33, 0x6e, 0x31, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductAPIClient is the client API for ProductAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductAPIClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IsExists(ctx context.Context, in *IsExistsRequest, opts ...grpc.CallOption) (*IsExistsResponse, error)
}

type productAPIClient struct {
	cc *grpc.ClientConn
}

func NewProductAPIClient(cc *grpc.ClientConn) ProductAPIClient {
	return &productAPIClient{cc}
}

func (c *productAPIClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/productpb.ProductAPI/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAPIClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	out := new(SetResponse)
	err := c.cc.Invoke(ctx, "/productpb.ProductAPI/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAPIClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/productpb.ProductAPI/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAPIClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/productpb.ProductAPI/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAPIClient) IsExists(ctx context.Context, in *IsExistsRequest, opts ...grpc.CallOption) (*IsExistsResponse, error) {
	out := new(IsExistsResponse)
	err := c.cc.Invoke(ctx, "/productpb.ProductAPI/IsExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductAPIServer is the server API for ProductAPI service.
type ProductAPIServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Set(context.Context, *SetRequest) (*SetResponse, error)
	Update(context.Context, *UpdateRequest) (*empty.Empty, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	IsExists(context.Context, *IsExistsRequest) (*IsExistsResponse, error)
}

// UnimplementedProductAPIServer can be embedded to have forward compatible implementations.
type UnimplementedProductAPIServer struct {
}

func (*UnimplementedProductAPIServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedProductAPIServer) Set(ctx context.Context, req *SetRequest) (*SetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedProductAPIServer) Update(ctx context.Context, req *UpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedProductAPIServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedProductAPIServer) IsExists(ctx context.Context, req *IsExistsRequest) (*IsExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsExists not implemented")
}

func RegisterProductAPIServer(s *grpc.Server, srv ProductAPIServer) {
	s.RegisterService(&_ProductAPI_serviceDesc, srv)
}

func _ProductAPI_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productpb.ProductAPI/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductAPI_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productpb.ProductAPI/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductAPI_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productpb.ProductAPI/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductAPI_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productpb.ProductAPI/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductAPI_IsExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).IsExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productpb.ProductAPI/IsExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).IsExists(ctx, req.(*IsExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "productpb.ProductAPI",
	HandlerType: (*ProductAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ProductAPI_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _ProductAPI_Set_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ProductAPI_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ProductAPI_Delete_Handler,
		},
		{
			MethodName: "IsExists",
			Handler:    _ProductAPI_IsExists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}
